process {

  // Global cluster parameters
  
  cpus = 1
  memory = 4.GB
  time = 1.h
  
  errorStrategy = { task.exitStatus == 143 ? 'retry' : 'finish' }
  maxRetries = 1
  maxErrors = '-1'

  withName:runBuildIndex {
        cpus = { check_max(2 * task.attempt, 'cpus') }
        memory = { check_max(16.GB * task.attempt, 'memory') }
        time = { check_max(3.h * task.attempt, 'time') }
  }
  withName:runQC {
	cpus = { check_max(4 * task.attempt, 'cpus') }
	memory = { check_max(32.GB * task.attempt, 'memory') }
	time = { check_max(10.h * task.attempt, 'time') }
  }
  withName:runCoAssembly {
	cpus = { check_max(16 * task.attempt, 'cpus') }
        memory = { check_max(64.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }
  withName:runSpades {
        cpus = { check_max(4 * task.attempt, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }
  withName:runSpadesBackmap {
        cpus = { check_max(4 * task.attempt, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }
  withName:runMaxbin {
        cpus = { check_max(4 * task.attempt, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }
  withName:runMaxbin40 {
        cpus = { check_max(4 * task.attempt, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }
  withName:runMetabat {
        cpus = { check_max(4 * task.attempt, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }
  withName:runCoassemblyBackmap {
        cpus = { check_max(4 * task.attempt, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }
  withName:runCollapseBams {
        cpus = { check_max(1 * task.attempt, 'cpus') }
        memory = { check_max(8.GB * task.attempt, 'memory') }
        time = { check_max(4.h * task.attempt, 'time') }
  }
  withName:runMegahitMaxbin {
        cpus = { check_max(16 * task.attempt, 'cpus') }
        memory = { check_max(64.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }
  withName:runMegahitMaxbin40 {
        cpus = { check_max(8 * task.attempt, 'cpus') }
        memory = { check_max(64.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }
  withName:runMegahitMetabat {
        cpus = { check_max(4 * task.attempt, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }
  withName:runMegahitMarkergenes{
        cpus = { check_max(4 * task.attempt, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }
  withName:runSpadesMarkergenes{
        cpus = { check_max(4 * task.attempt, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }  
  withName:runSpadesRefine{
        cpus = { check_max(4 * task.attempt, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }
  withMame:runMegahitRefine{
        cpus = { check_max(4 * task.attempt, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(10.h * task.attempt, 'time') }
  }

}
