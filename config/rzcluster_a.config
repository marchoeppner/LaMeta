// List of parameters

params.bbwrap="/ifs/data/nfs_share/ikmb_repository/software/bbmap/37.88/bbwrap.sh"
params.bbduk="/ifs/data/nfs_share/ikmb_repository/software/bbmap/37.88/bbduk.sh"
params.bbmerge="/ifs/data/nfs_share/ikmb_repository/software/bbmap/37.88/bbmerge.sh"
params.reformat="/ifs/data/nfs_share/ikmb_repository/software/bbmap/37.88/reformat.sh"

// see http://seqanswers.com/forums/showthread.php?t=42552 for preparation
params.hsref="/ifs/data/nfs_share/sukmb276/references/bbmask_references/hg19/"
params.adapters="/ifs/data/nfs_share/ikmb_repository/software/bbmap/37.88/resources/nextera.fa.gz"

params.megahit="/ifs/data/nfs_share/sukmb276/software/bin/megahit"

params.spades="/ifs/data/nfs_share/ikmb_repository/software/spades/3.9.0/bin/spades.py"

params.samtools="/ifs/data/nfs_share/ikmb_repository/software/samtools/1.5/bin/samtools"

params.jgisum="/ifs/data/nfs_share/sukmb276/software/metabat/metabat/jgi_summarize_bam_contig_depths"
params.metabat="/ifs/data/nfs_share/sukmb276/software/bin/metabat2"
params.maxbin="/ifs/data/nfs_share/sukmb276/software/MaxBin-2.2.4/run_MaxBin.pl"
params.prodigal="/ifs/data/nfs_share/ikmb_repository/software/prodigal/2.6.2/prodigal"
params.hmmsearch="/ifs/data/nfs_share/ikmb_repository/software/hmmer/3.1b2/bin/hmmsearch"
params.parallel="/ifs/data/nfs_share/sukmb276/software/bin/parallel"
// hmmpress the markers first
params.markers40hmm="/home/sukmb276/Isilon/software/MaxBin-2.2.4/bacar_marker.hmm"
params.markers107hmm="/home/sukmb276/Isilon/software/MaxBin-2.2.4/marker.hmm"

params.checkm="/home/sukmb276/.pyenv/shims/checkm"
params.drep="/home/sukmb276//.pyenv/shims/dRep"

params.gtdbtk="/home/sukmb276/.pyenv/versions/2.7.10/bin/gtdbtk"
params.gtdb="/ifs/data/nfs_share/sukmb276/references/release86/"

params.rscript="/ifs/data/nfs_share/ikmb_repository/software/R/3.4.0/bin/Rscript"

params.pyenv2="2.7.10"
params.pyenv3="3.5.1"

params.python="~/.pyenv/shims/python"

executor {
  name = "slurm"
  queueSize = 30
}

process {
  // Global cluster parameters
  executor = 'slurm'
  queue = 'ikmb_a'
  clusterOptions = { '--qos=ikmb_a' }
  errorStrategy = { task.exitStatus == 143 ? 'retry' : 'finish' }
  maxRetries = 1
  maxErrors = '-1'

  $runQC {
        cpus = 4
        memory = { 40.GB * task.attempt }
  }

  $runCoAssembly {
      cpus = 16
      memory = 120.GB
  }

  $runSpades {
        cpus = { 5 * task.attempt }
        memory = { 60.GB * task.attempt }
  }

  $runSpadesBackmap {
        cpus = 5
        memory = { 60.GB * task.attempt }
  }

  $runMaxbin {
        cpus = 5
        memory = { 60.GB * task.attempt }
  }

$runMaxbin40 {
	cpus = 5
        memory = { 60.GB * task.attempt }
  }

  $runMetabat {
        cpus = 5
        memory = { 60.GB * task.attempt }
  }

  $runCoassemblyBackmap {
      cpus = 5
      memory = { 60.GB * task.attempt }
  }

  $runCollapseBams {
      cpus = 1
      memory = { 12.GB * task.attempt }
  }

  $runMegahitMaxbin {
      cpus = 16
      memory = 120.GB
  }

  $runMegahitMaxbin40 {
      cpus = 16
      memory = 120.GB
  }

  $runMegahitMetabat {
      cpus = 5
      memory = 60.GB
  }

  $runMegahitMarkergenes{
	cpus = 5
	memory = 60.GB
  }

  $runSpadesMarkergenes{
        cpus = 5
        memory = 60.GB
  }
  
  $runSpadesRefine{
	cpus = 5
	memory = 60.GB
  }

  $runMegahitRefine{
        cpus = 5
        memory = 60.GB
  }

}
